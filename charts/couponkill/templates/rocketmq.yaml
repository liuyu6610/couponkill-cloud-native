{{- if .Values.rocketmq.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.rocketmq.name }}-namesrv
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-namesrv
spec:
  ports:
    - port: {{ .Values.rocketmq.namesrv.service.port }}
      targetPort: 9876
      protocol: TCP
      name: namesrv
  selector:
    app: {{ .Values.rocketmq.name }}-namesrv
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.rocketmq.name }}-broker
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-broker
spec:
  ports:
    - port: {{ .Values.rocketmq.broker.service.ports.listenPort }}
      targetPort: 10911
      protocol: TCP
      name: broker-port
    - port: {{ .Values.rocketmq.broker.service.ports.haListenPort }}
      targetPort: 10912
      protocol: TCP
      name: broker-ha-port
  selector:
    app: {{ .Values.rocketmq.name }}-broker
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.rocketmq.name }}-namesrv
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-namesrv
spec:
  replicas: {{ .Values.rocketmq.namesrv.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rocketmq.name }}-namesrv
  template:
    metadata:
      labels:
        app: {{ .Values.rocketmq.name }}-namesrv
    spec:
      containers:
        - name: namesrv
          image: "{{ .Values.rocketmq.namesrv.image.repository }}:{{ .Values.rocketmq.namesrv.image.tag }}"
          imagePullPolicy: {{ .Values.rocketmq.namesrv.image.pullPolicy }}
          ports:
            - containerPort: 9876
          env:
            - name: NAMESRV_ADDR
              value: "{{ .Values.rocketmq.name }}-namesrv:9876"
          resources:
            requests:
              memory: "{{ .Values.rocketmq.namesrv.resources.requests.memory }}"
              cpu: "{{ .Values.rocketmq.namesrv.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.rocketmq.namesrv.resources.limits.memory }}"
              cpu: "{{ .Values.rocketmq.namesrv.resources.limits.cpu }}"
          readinessProbe:
            tcpSocket:
              port: 9876
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 9876
            initialDelaySeconds: 30
            periodSeconds: 10

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.rocketmq.name }}-broker
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-broker
spec:
  replicas: {{ .Values.rocketmq.broker.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rocketmq.name }}-broker
  template:
    metadata:
      labels:
        app: {{ .Values.rocketmq.name }}-broker
    spec:
      containers:
        - name: broker
          image: "{{ .Values.rocketmq.broker.image.repository }}:{{ .Values.rocketmq.broker.image.tag }}"
          imagePullPolicy: {{ .Values.rocketmq.broker.image.pullPolicy }}
          ports:
            - containerPort: 10911
            - containerPort: 10912
          env:
            - name: NAMESRV_ADDR
              value: "{{ .Values.rocketmq.name }}-namesrv:9876"
            - name: BROKER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BROKER_ROLE
              value: "ASYNC_MASTER"
            - name: FLUSH_DISK_TYPE
              value: "ASYNC_FLUSH"
          volumeMounts:
            - name: broker-storage
              mountPath: /root/store
            - name: broker-logs
              mountPath: /root/logs
          resources:
            requests:
              memory: "{{ .Values.rocketmq.broker.resources.requests.memory }}"
              cpu: "{{ .Values.rocketmq.broker.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.rocketmq.broker.resources.limits.memory }}"
              cpu: "{{ .Values.rocketmq.broker.resources.limits.cpu }}"
          readinessProbe:
            tcpSocket:
              port: 10911
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 10911
            initialDelaySeconds: 60
            periodSeconds: 20
      volumes:
        - name: broker-storage
          emptyDir: {}
        - name: broker-logs
          emptyDir: {}

---
# RocketMQ集群模式支持
{{- if .Values.rocketmq.cluster.enabled }}
{{- range $index := until (int .Values.rocketmq.cluster.namesrv.replicas) }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.rocketmq.name }}-namesrv-{{ $index }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{ $.Values.rocketmq.name }}-namesrv-cluster
spec:
  ports:
    - port: {{ $.Values.rocketmq.namesrv.service.port }}
      targetPort: 9876
      protocol: TCP
      name: namesrv
  selector:
    app: {{ $.Values.rocketmq.name }}-namesrv-cluster
    index: "{{ $index }}"
  type: ClusterIP
{{- end }}

{{- range $index := until (int .Values.rocketmq.cluster.broker.replicas) }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.rocketmq.name }}-broker-{{ $index }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{ $.Values.rocketmq.name }}-broker-cluster
spec:
  ports:
    - port: {{ $.Values.rocketmq.broker.service.ports.listenPort }}
      targetPort: 10911
      protocol: TCP
      name: broker-port
    - port: {{ $.Values.rocketmq.broker.service.ports.haListenPort }}
      targetPort: 10912
      protocol: TCP
      name: broker-ha-port
  selector:
    app: {{ $.Values.rocketmq.name }}-broker-cluster
    index: "{{ $index }}"
  type: ClusterIP
{{- end }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.rocketmq.name }}-namesrv-cluster
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-namesrv-cluster
spec:
  serviceName: {{ .Values.rocketmq.name }}-namesrv-cluster
  replicas: {{ .Values.rocketmq.cluster.namesrv.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rocketmq.name }}-namesrv-cluster
  template:
    metadata:
      labels:
        app: {{ .Values.rocketmq.name }}-namesrv-cluster
    spec:
      containers:
        - name: namesrv
          image: "{{ .Values.rocketmq.namesrv.image.repository }}:{{ .Values.rocketmq.namesrv.image.tag }}"
          imagePullPolicy: {{ .Values.rocketmq.namesrv.image.pullPolicy }}
          ports:
            - containerPort: 9876
          env:
            - name: NAMESRV_ADDR
              value: "{{ range $index := until (int .Values.rocketmq.cluster.namesrv.replicas) }}{{ $.Values.rocketmq.name }}-namesrv-{{ $index }}:9876;{{ end }}"
          resources:
            requests:
              memory: "{{ .Values.rocketmq.namesrv.resources.requests.memory }}"
              cpu: "{{ .Values.rocketmq.namesrv.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.rocketmq.namesrv.resources.limits.memory }}"
              cpu: "{{ .Values.rocketmq.namesrv.resources.limits.cpu }}"
          readinessProbe:
            tcpSocket:
              port: 9876
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 9876
            initialDelaySeconds: 30
            periodSeconds: 10

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.rocketmq.name }}-broker-cluster
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-broker-cluster
spec:
  serviceName: {{ .Values.rocketmq.name }}-broker-cluster
  replicas: {{ .Values.rocketmq.cluster.broker.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rocketmq.name }}-broker-cluster
  template:
    metadata:
      labels:
        app: {{ .Values.rocketmq.name }}-broker-cluster
    spec:
      containers:
        - name: broker
          image: "{{ .Values.rocketmq.broker.image.repository }}:{{ .Values.rocketmq.broker.image.tag }}"
          imagePullPolicy: {{ .Values.rocketmq.broker.image.pullPolicy }}
          ports:
            - containerPort: 10911
            - containerPort: 10912
          env:
            - name: NAMESRV_ADDR
              value: "{{ range $index := until (int .Values.rocketmq.cluster.namesrv.replicas) }}{{ $.Values.rocketmq.name }}-namesrv-{{ $index }}:9876;{{ end }}"
            - name: BROKER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BROKER_ROLE
              value: "ASYNC_MASTER"
            - name: FLUSH_DISK_TYPE
              value: "ASYNC_FLUSH"
          volumeMounts:
            - name: broker-storage
              mountPath: /root/store
            - name: broker-logs
              mountPath: /root/logs
          resources:
            requests:
              memory: "{{ .Values.rocketmq.broker.resources.requests.memory }}"
              cpu: "{{ .Values.rocketmq.broker.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.rocketmq.broker.resources.limits.memory }}"
              cpu: "{{ .Values.rocketmq.broker.resources.limits.cpu }}"
          readinessProbe:
            tcpSocket:
              port: 10911
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 10911
            initialDelaySeconds: 60
            periodSeconds: 20
      volumes:
        - name: broker-storage
          emptyDir: {}
        - name: broker-logs
          emptyDir: {}
{{- end }}
{{- end }}