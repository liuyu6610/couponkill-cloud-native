{{- if .Values.rocketmq.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.rocketmq.name }}-namesrv
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-namesrv
spec:
  ports:
    - port: {{ .Values.rocketmq.nameServer.service.port }}
      targetPort: 9876
      protocol: TCP
      name: namesrv
  selector:
    app: {{ .Values.rocketmq.name }}-namesrv
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.rocketmq.name }}-broker
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-broker
spec:
  ports:
    - port: {{ .Values.rocketmq.broker.service.ports.listenPort }}
      targetPort: 10911
      protocol: TCP
      name: broker-port
    - port: {{ .Values.rocketmq.broker.service.ports.haListenPort }}
      targetPort: 10912
      protocol: TCP
      name: broker-ha-port
  selector:
    app: {{ .Values.rocketmq.name }}-broker
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.rocketmq.name }}-namesrv
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-namesrv
spec:
  replicas: {{ .Values.rocketmq.nameServer.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rocketmq.name }}-namesrv
  template:
    metadata:
      labels:
        app: {{ .Values.rocketmq.name }}-namesrv
    spec:
      containers:
        - name: namesrv
          image: "{{ .Values.rocketmq.nameServer.image.registry }}:{{ .Values.rocketmq.nameServer.image.tag }}"
          imagePullPolicy: {{ .Values.rocketmq.nameServer.image.pullPolicy | default "IfNotPresent" }}
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          ports:
            - containerPort: 9876
          env:
            - name: JAVA_OPT
              value: "-server -Xms512m -Xmx512m -Xmn256m"
          command: ["sh", "mqnamesrv"]
          volumeMounts:
            - name: data
              mountPath: /home/rocketmq/store
      volumes:
        - name: data
          emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.rocketmq.name }}-broker
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-broker
spec:
  replicas: {{ .Values.rocketmq.broker.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rocketmq.name }}-broker
  template:
    metadata:
      labels:
        app: {{ .Values.rocketmq.name }}-broker
    spec:
      containers:
        - name: broker
          image: "{{ .Values.rocketmq.broker.image.registry }}:{{ .Values.rocketmq.broker.image.tag }}"
          imagePullPolicy: {{ .Values.rocketmq.broker.image.pullPolicy | default "IfNotPresent" }}
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
          ports:
            - containerPort: 10911
              name: broker-port
            - containerPort: 10912
              name: broker-ha-port
          command: ["sh", "mqbroker"]
          env:
            - name: NAMESRV_ADDR
              value: "{{ .Values.rocketmq.name }}-namesrv:{{ .Values.rocketmq.nameServer.service.port }}"
            - name: JAVA_OPT
              value: "-server -Xms1g -Xmx1g -Xmn512m"
          volumeMounts:
            - name: data
              mountPath: /home/rocketmq/store
      volumes:
        - name: data
          emptyDir: {}
{{- end }}