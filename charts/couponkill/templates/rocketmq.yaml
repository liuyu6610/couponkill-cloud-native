{{- if .Values.rocketmq.enabled }}
{{- if .Values.rocketmq.nameServer.cluster.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.rocketmq.name }}-namesrv-headless
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-namesrv
spec:
  ports:
    - port: {{ .Values.rocketmq.nameServer.service.port }}
      targetPort: 9876
      protocol: TCP
      name: namesrv
  clusterIP: None
  selector:
    app: {{ .Values.rocketmq.name }}-namesrv

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.rocketmq.name }}-namesrv
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-namesrv
spec:
  serviceName: {{ .Values.rocketmq.name }}-namesrv-headless
  replicas: {{ .Values.rocketmq.nameServer.cluster.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rocketmq.name }}-namesrv
  template:
    metadata:
      labels:
        app: {{ .Values.rocketmq.name }}-namesrv
    spec:
      containers:
        - name: namesrv
          image: "{{ .Values.rocketmq.image.repository }}:{{ .Values.rocketmq.image.tag }}"
          imagePullPolicy: {{ .Values.rocketmq.image.pullPolicy }}
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
          ports:
            - containerPort: 9876
              name: namesrv
          command: ["sh", "mqnamesrv"]
          env:
            - name: JAVA_OPT
              value: "-server -Xms1g -Xmx1g -Xmn512m"
          volumeMounts:
            - name: data
              mountPath: /home/rocketmq/store
      volumes:
        - name: data
          emptyDir: {}
{{- else }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.rocketmq.name }}-namesrv
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-namesrv
spec:
  ports:
    - port: {{ .Values.rocketmq.nameServer.service.port }}
      targetPort: 9876
      protocol: TCP
      name: namesrv
  selector:
    app: {{ .Values.rocketmq.name }}-namesrv
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.rocketmq.name }}-namesrv
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-namesrv
spec:
  replicas: {{ .Values.rocketmq.nameServer.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rocketmq.name }}-namesrv
  template:
    metadata:
      labels:
        app: {{ .Values.rocketmq.name }}-namesrv
    spec:
      containers:
        - name: namesrv
          image: "{{ .Values.rocketmq.image.repository }}:{{ .Values.rocketmq.image.tag }}"
          imagePullPolicy: {{ .Values.rocketmq.image.pullPolicy }}
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
          ports:
            - containerPort: 9876
          command: ["sh", "mqnamesrv"]
          env:
            - name: JAVA_OPT
              value: "-server -Xms1g -Xmx1g -Xmn512m"
          volumeMounts:
            - name: data
              mountPath: /home/rocketmq/store
      volumes:
        - name: data
          emptyDir: {}
{{- end }}

{{- if .Values.rocketmq.broker.cluster.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.rocketmq.name }}-broker-headless
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-broker
spec:
  ports:
    - port: {{ .Values.rocketmq.broker.service.ports.listenPort }}
      targetPort: 10911
      protocol: TCP
      name: broker-port
    - port: {{ .Values.rocketmq.broker.service.ports.haListenPort }}
      targetPort: 10912
      protocol: TCP
      name: broker-ha-port
  clusterIP: None
  selector:
    app: {{ .Values.rocketmq.name }}-broker

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.rocketmq.name }}-broker
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-broker
spec:
  serviceName: {{ .Values.rocketmq.name }}-broker-headless
  replicas: {{ .Values.rocketmq.broker.cluster.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rocketmq.name }}-broker
  template:
    metadata:
      labels:
        app: {{ .Values.rocketmq.name }}-broker
    spec:
      containers:
        - name: broker
          image: "{{ .Values.rocketmq.image.repository }}:{{ .Values.rocketmq.image.tag }}"
          imagePullPolicy: {{ .Values.rocketmq.image.pullPolicy }}
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
            limits:
              memory: "4Gi"
              cpu: "2"
          ports:
            - containerPort: 10911
              name: broker-port
            - containerPort: 10912
              name: broker-ha-port
          command: ["sh", "mqbroker"]
          env:
            - name: NAMESRV_ADDR
              {{- if .Values.rocketmq.nameServer.cluster.enabled }}
              value: "{{ range $i, $e := until (.Values.rocketmq.nameServer.cluster.replicas | int) }}{{ $.Values.rocketmq.name }}-namesrv-{{ $i }}.{{ $.Values.rocketmq.name }}-namesrv-headless:{{ $.Values.rocketmq.nameServer.service.port }};{{ end }}"
              {{- else }}
              value: "{{ .Values.rocketmq.name }}-namesrv:{{ .Values.rocketmq.nameServer.service.port }}"
              {{- end }}
            - name: JAVA_OPT
              value: "-server -Xms2g -Xmx2g -Xmn1g"
            - name: BROKER_ROLE
              value: "{{ .Values.rocketmq.broker.cluster.config.brokerRole }}"
            - name: FLUSH_DISK_TYPE
              value: "{{ .Values.rocketmq.broker.cluster.config.flushDiskType }}"
          volumeMounts:
            - name: data
              mountPath: /home/rocketmq/store
            - name: config
              mountPath: /home/rocketmq/rocketmq-4.9.4/conf/broker.conf
              subPath: broker.conf
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: {{ .Values.rocketmq.name }}-broker-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.rocketmq.name }}-broker-config
  namespace: {{ .Values.namespace }}
data:
  broker.conf: |
    brokerClusterName = DefaultCluster
    brokerName = broker-a
    brokerId = 0
    deleteWhen = 04
    fileReservedTime = 48
    brokerRole = {{ .Values.rocketmq.broker.cluster.config.brokerRole }}
    flushDiskType = {{ .Values.rocketmq.broker.cluster.config.flushDiskType }}
{{- else }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.rocketmq.name }}-broker
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-broker
spec:
  ports:
    - port: {{ .Values.rocketmq.broker.service.ports.listenPort }}
      targetPort: 10911
      protocol: TCP
      name: broker-port
    - port: {{ .Values.rocketmq.broker.service.ports.haListenPort }}
      targetPort: 10912
      protocol: TCP
      name: broker-ha-port
  selector:
    app: {{ .Values.rocketmq.name }}-broker
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.rocketmq.name }}-broker
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.rocketmq.name }}-broker
spec:
  replicas: {{ .Values.rocketmq.broker.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rocketmq.name }}-broker
  template:
    metadata:
      labels:
        app: {{ .Values.rocketmq.name }}-broker
    spec:
      containers:
        - name: broker
          image: "{{ .Values.rocketmq.image.repository }}:{{ .Values.rocketmq.image.tag }}"
          imagePullPolicy: {{ .Values.rocketmq.image.pullPolicy }}
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
            limits:
              memory: "4Gi"
              cpu: "2"
          ports:
            - containerPort: 10911
              name: broker-port
            - containerPort: 10912
              name: broker-ha-port
          command: ["sh", "mqbroker"]
          env:
            - name: NAMESRV_ADDR
              {{- if .Values.rocketmq.nameServer.cluster.enabled }}
              value: "{{ range $i, $e := until (.Values.rocketmq.nameServer.cluster.replicas | int) }}{{ $.Values.rocketmq.name }}-namesrv-{{ $i }}.{{ $.Values.rocketmq.name }}-namesrv-headless:{{ $.Values.rocketmq.nameServer.service.port }};{{ end }}"
              {{- else }}
              value: "{{ .Values.rocketmq.name }}-namesrv:{{ .Values.rocketmq.nameServer.service.port }}"
              {{- end }}
            - name: JAVA_OPT
              value: "-server -Xms2g -Xmx2g -Xmn1g"
          volumeMounts:
            - name: data
              mountPath: /home/rocketmq/store
      volumes:
        - name: data
          emptyDir: {}
{{- end }}
{{- end }}