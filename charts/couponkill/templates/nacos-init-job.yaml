{{- if .Values.nacos.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.nacos.name }}-init
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.nacos.name }}-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: {{ .Values.nacos.name }}-init
    spec:
      containers:
        - name: nacos-client
          image: "{{ .Values.nacos.image.repository }}:{{ .Values.nacos.image.tag }}"
          imagePullPolicy: {{ .Values.nacos.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for Nacos to be ready..."
              {{- if .Values.nacos.cluster.enabled }}
              until curl -s http://{{ .Values.nacos.name }}-0.{{ .Values.nacos.name }}-headless:{{ .Values.nacos.service.port }}/nacos/v1/console/health; do
                sleep 2
              done
              {{- else }}
              until curl -s http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/console/health; do
                sleep 2
              done
              {{- end }}
              
              echo "Initializing Nacos configurations..."
              
              # 创建common.yaml配置
              curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                -d "dataId={{ .Values.nacos.config.common.dataId }}" \
                -d "group={{ .Values.nacos.config.common.group }}" \
                --data-urlencode "content={{ .Values.nacos.config.common.content }}" \
                -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              
              # 创建用户服务分库分表配置
              curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                -d "dataId={{ .Values.nacos.config.sharding.user.dataId }}" \
                -d "group={{ .Values.nacos.config.sharding.user.group }}" \
                --data-urlencode "content={{ .Values.nacos.config.sharding.user.content }}" \
                -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              
              # 创建订单服务分库分表配置
              curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                -d "dataId={{ .Values.nacos.config.sharding.order.dataId }}" \
                -d "group={{ .Values.nacos.config.sharding.order.group }}" \
                --data-urlencode "content={{ .Values.nacos.config.sharding.order.content }}" \
                -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              
              # 创建优惠券服务分库分表配置
              curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                -d "dataId={{ .Values.nacos.config.sharding.coupon.dataId }}" \
                -d "group={{ .Values.nacos.config.sharding.coupon.group }}" \
                --data-urlencode "content={{ .Values.nacos.config.sharding.coupon.content }}" \
                -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              
              # 创建Go服务协同配置
              curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                -d "dataId=service-collaboration.yaml" \
                -d "group=DEFAULT_GROUP" \
                --data-urlencode "content={{ .Values.nacos.config.collaboration.content }}" \
                -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              
              # 创建中间件集群配置
              curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                -d "dataId=middleware-cluster-config.yaml" \
                -d "group=DEFAULT_GROUP" \
                --data-urlencode "content={{ .Values.nacos.config.middleware.content }}" \
                -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              
              # 创建网关路由配置
              curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                -d "dataId=gateway-routes.yaml" \
                -d "group=DEFAULT_GROUP" \
                --data-urlencode "content={{ .Values.nacos.config.gateway.content }}" \
                -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              
              # 创建Go服务配置
              curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                -d "dataId={{ .Values.nacos.config.go.dataId }}" \
                -d "group={{ .Values.nacos.config.go.group }}" \
                --data-urlencode "content={{ .Values.nacos.config.go.content }}" \
                -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              
              echo "Nacos initialization completed."
              
              # 创建动态配置更新脚本
              cat > /tmp/update-configs.sh << 'EOF'
              #!/bin/sh
              echo "Checking for configuration updates..."
              
              # 检查并更新 common.yaml 配置
              COMMON_CONFIG=$(curl -s "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs?dataId={{ .Values.nacos.config.common.dataId }}&group={{ .Values.nacos.config.common.group }}")
              if [ "$COMMON_CONFIG" != "{{ .Values.nacos.config.common.content | quote }}" ]; then
                echo "Updating common.yaml configuration..."
                curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                  -d "dataId={{ .Values.nacos.config.common.dataId }}" \
                  -d "group={{ .Values.nacos.config.common.group }}" \
                  --data-urlencode "content={{ .Values.nacos.config.common.content }}" \
                  -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              fi
              
              # 检查并更新用户服务分库分表配置
              USER_SHARDING_CONFIG=$(curl -s "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs?dataId={{ .Values.nacos.config.sharding.user.dataId }}&group={{ .Values.nacos.config.sharding.user.group }}")
              if [ "$USER_SHARDING_CONFIG" != "{{ .Values.nacos.config.sharding.user.content | quote }}" ]; then
                echo "Updating user service sharding configuration..."
                curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                  -d "dataId={{ .Values.nacos.config.sharding.user.dataId }}" \
                  -d "group={{ .Values.nacos.config.sharding.user.group }}" \
                  --data-urlencode "content={{ .Values.nacos.config.sharding.user.content }}" \
                  -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              fi
              
              # 检查并更新订单服务分库分表配置
              ORDER_SHARDING_CONFIG=$(curl -s "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs?dataId={{ .Values.nacos.config.sharding.order.dataId }}&group={{ .Values.nacos.config.sharding.order.group }}")
              if [ "$ORDER_SHARDING_CONFIG" != "{{ .Values.nacos.config.sharding.order.content | quote }}" ]; then
                echo "Updating order service sharding configuration..."
                curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                  -d "dataId={{ .Values.nacos.config.sharding.order.dataId }}" \
                  -d "group={{ .Values.nacos.config.sharding.order.group }}" \
                  --data-urlencode "content={{ .Values.nacos.config.sharding.order.content }}" \
                  -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              fi
              
              # 检查并更新优惠券服务分库分表配置
              COUPON_SHARDING_CONFIG=$(curl -s "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs?dataId={{ .Values.nacos.config.sharding.coupon.dataId }}&group={{ .Values.nacos.config.sharding.coupon.group }}")
              if [ "$COUPON_SHARDING_CONFIG" != "{{ .Values.nacos.config.sharding.coupon.content | quote }}" ]; then
                echo "Updating coupon service sharding configuration..."
                curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                  -d "dataId={{ .Values.nacos.config.sharding.coupon.dataId }}" \
                  -d "group={{ .Values.nacos.config.sharding.coupon.group }}" \
                  --data-urlencode "content={{ .Values.nacos.config.sharding.coupon.content }}" \
                  -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              fi
              
              # 检查并更新Go服务协同配置
              COLLABORATION_CONFIG=$(curl -s "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs?dataId=service-collaboration.yaml&group=DEFAULT_GROUP")
              EXPECTED_COLLABORATION_CONFIG="{{ .Values.nacos.config.collaboration.content | replace "\"" "\\\"" | replace "\n" "\\n" }}"
              if [ "$COLLABORATION_CONFIG" != "$EXPECTED_COLLABORATION_CONFIG" ]; then
                echo "Updating service collaboration configuration..."
                curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                  -d "dataId=service-collaboration.yaml" \
                  -d "group=DEFAULT_GROUP" \
                  --data-urlencode "content={{ .Values.nacos.config.collaboration.content }}" \
                  -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
              fi
              
              # 检查并更新中间件集群配置
              MIDDLEWARE_CONFIG=$(curl -s "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs?dataId=middleware-cluster-config.yaml&group=DEFAULT_GROUP")
              EXPECTED_MIDDLEWARE_CONFIG="{{ .Values.nacos.config.middleware.content | replace "\"" "\\\"" | replace "\n" "\\n" }}"
              if [ "$MIDDLEWARE_CONFIG" != "$EXPECTED_MIDDLEWARE_CONFIG" ]; then
                echo "Updating middleware cluster configuration..."
                curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                  -d "dataId=middleware-cluster-config.yaml" \
                  -d "group=DEFAULT_GROUP" \
                  --data-urlencode "content={{ .Values.nacos.config.middleware.content }}" \
                  -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
                if [ $? -ne 0 ]; then
                  echo "Failed to update middleware cluster configuration"
                  exit 1
                fi
              else
                echo "Middleware cluster configuration is up to date"
              fi
              
              # 检查并更新网关路由配置
              GATEWAY_CONFIG=$(curl -s "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs?dataId=gateway-routes.yaml&group=DEFAULT_GROUP")
              EXPECTED_GATEWAY_CONFIG="{{ .Values.nacos.config.gateway.content | replace "\"" "\\\"" | replace "\n" "\\n" }}"
              if [ "$GATEWAY_CONFIG" != "$EXPECTED_GATEWAY_CONFIG" ]; then
                echo "Updating gateway routes configuration..."
                curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                  -d "dataId=gateway-routes.yaml" \
                  -d "group=DEFAULT_GROUP" \
                  --data-urlencode "content={{ .Values.nacos.config.gateway.content }}" \
                  -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
                if [ $? -ne 0 ]; then
                  echo "Failed to update gateway routes configuration"
                  exit 1
                fi
              else
                echo "Gateway routes configuration is up to date"
              fi
              
              # 检查并更新Go服务配置
              GO_CONFIG=$(curl -s "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs?dataId={{ .Values.nacos.config.go.dataId }}&group={{ .Values.nacos.config.go.group }}")
              EXPECTED_GO_CONFIG="{{ .Values.nacos.config.go.content | replace "\"" "\\\"" | replace "\n" "\\n" }}"
              if [ "$GO_CONFIG" != "$EXPECTED_GO_CONFIG" ]; then
                echo "Updating Go service configuration..."
                curl -X POST "http://{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}/nacos/v1/cs/configs" \
                  -d "dataId={{ .Values.nacos.config.go.dataId }}" \
                  -d "group={{ .Values.nacos.config.go.group }}" \
                  --data-urlencode "content={{ .Values.nacos.config.go.content }}" \
                  -H "Content-Type: application/x-www-form-urlencoded;charset=utf-8"
                if [ $? -ne 0 ]; then
                  echo "Failed to update Go service configuration"
                  exit 1
                fi
              else
                echo "Go service configuration is up to date"
              fi
              
              echo "Configuration update check completed."
              EOF
              
              chmod +x /tmp/update-configs.sh
          env:
            - name: NACOS_ADDR
              value: "{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}"
      restartPolicy: OnFailure
{{- end }}