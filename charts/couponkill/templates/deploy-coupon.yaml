# 部署 Coupon 服务的 Deployment 资源定义
# 该资源用于创建和管理 Coupon 服务的 Pod 副本
# 参数:
#   .Values.services.coupon.name: 服务名称
#   .Values.namespace: 命名空间
#   .Values.services.coupon.replicas: 初始副本数
#   .Values.image.registry: 镜像仓库地址
#   .Values.services.coupon.image.name: 镜像名称
#   .Values.services.coupon.image.tag: 镜像标签
#   .Values.services.coupon.port: 容器暴露的端口
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: {{ .Values.services.coupon.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    # 添加配置版本标签，用于配置更新时触发滚动更新
    config-version: "{{ now | date "20250902150405" }}"
spec:
  replicas: {{ .Values.services.coupon.replicas }}
  selector: 
    matchLabels: 
      app: {{ .Values.services.coupon.name }}
  template:
    metadata: 
      labels: 
        app: {{ .Values.services.coupon.name }}
      annotations:
        # 添加配置更新时间戳，用于触发滚动更新
        config-update-time: "{{ now | date "2025-09-02T15:04:05Z07:00" }}"
        # 添加Nacos配置检查注解，用于实现零停机配置更新
        nacos-config-checksum: "{{ .Values.nacos.config.sharding.coupon.content | sha256sum }}"
        nacos-common-checksum: "{{ .Values.nacos.config.common.content | sha256sum }}"

    spec:
      serviceAccountName: {{ .Values.serviceAccount1.name }}
      containers:
        - name: app
          image: "{{ .Values.image.registry }}:{{ .Values.services.coupon.image.name }}}"
          ports: 
            - containerPort: {{ .Values.services.coupon.port }}
          # 配置就绪探针，检查服务是否准备就绪
          # 初始延迟5秒，每10秒检查一次
          readinessProbe: 
            httpGet: 
              path: /actuator/health
              port: {{ .Values.services.coupon.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          # 配置存活探针，检查服务是否正常运行
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.services.coupon.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          # 配置环境变量，用于连接中间件
          env:
            # Nacos配置
            - name: SPRING_CLOUD_NACOS_SERVER-ADDR
              value: "{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}"
            - name: SPRING_CLOUD_NACOS_CONFIG_SERVER-ADDR
              value: "{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}"
            - name: SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR
              value: "{{ .Values.nacos.name }}:{{ .Values.nacos.service.port }}"
            # MySQL集群配置
            - name: MYSQL_CLUSTER_ENABLED
              value: "{{ .Values.mysql.cluster.enabled | default "false" }}"
            - name: MYSQL_CLUSTER_TYPE
              value: "{{ .Values.mysql.cluster.type | default "standalone" }}"
            # Redis集群配置
            - name: REDIS_CLUSTER_ENABLED
              value: "{{ .Values.redis.cluster.enabled | default "false" }}"
            - name: REDIS_CLUSTER_TYPE
              value: "{{ .Values.redis.cluster.type | default "standalone" }}"
            # RocketMQ集群配置
            - name: ROCKETMQ_CLUSTER_ENABLED
              value: "{{ .Values.rocketmq.cluster.enabled | default "false" }}"
          # 资源限制
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: config-volume
          emptyDir: {}
      # 优雅停止
      terminationGracePeriodSeconds: 30