{{- if and .Values.keda.enabled .Values.keda.kafka }}
{{- if .Values.keda.kafka.goEdge.enabled }}
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: so-{{ .Values.keda.kafka.goEdge.deploymentName }}
  namespace: {{ .Values.namespace }}
spec:
  scaleTargetRef:
    name: {{ .Values.keda.kafka.goEdge.deploymentName }}
  pollingInterval: 15
  cooldownPeriod: 60
  minReplicaCount: {{ .Values.keda.kafka.goEdge.minReplicaCount }}
  maxReplicaCount: {{ .Values.keda.kafka.goEdge.maxReplicaCount }}
  triggers:
    - type: kafka
      metadata:
        bootstrapServers: {{ quote .Values.keda.kafka.bootstrapServers }}
        consumerGroup: {{ .Values.keda.kafka.goEdge.consumerGroup | quote }}
        topic: {{ .Values.keda.kafka.goEdge.topic | quote }}
        lagThreshold: {{ .Values.keda.kafka.goEdge.lagThreshold | quote }}
---
{{- end }}
{{- if .Values.keda.kafka.order.enabled }}
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: so-{{ .Values.keda.kafka.order.deploymentName }}
  namespace: {{ .Values.namespace }}
spec:
  scaleTargetRef:
    name: {{ .Values.keda.kafka.order.deploymentName }}
  pollingInterval: 15
  cooldownPeriod: 60
  minReplicaCount: {{ .Values.keda.kafka.order.minReplicaCount }}
  maxReplicaCount: {{ .Values.keda.kafka.order.maxReplicaCount }}
  triggers:
    - type: kafka
      metadata:
        bootstrapServers: {{ quote .Values.keda.kafka.bootstrapServers }}
        consumerGroup: {{ .Values.keda.kafka.order.consumerGroup | quote }}
        topic: {{ .Values.keda.kafka.order.topic | quote }}
        lagThreshold: {{ .Values.keda.kafka.order.lagThreshold | quote }}
{{- end }}
{{- end }}
