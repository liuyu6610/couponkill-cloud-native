<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aliyun.seckill.couponkillorderservice.mapper.OrderMapper">

    <resultMap id="BaseResultMap" type="com.aliyun.seckill.common.pojo.Order">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="coupon_id" property="couponId"/>
        <result column="virtual_id" property="virtualId"/>
        <result column="status" property="status"/>
        <result column="get_time" property="getTime"/>
        <result column="use_time" property="useTime"/>
        <result column="cancel_time" property="cancelTime"/>
        <result column="expire_time" property="expireTime"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="request_id" property="requestId"/>
        <result column="version" property="version"/>
    </resultMap>

    <insert id="insert" parameterType="com.aliyun.seckill.common.pojo.Order">
        INSERT INTO `order` (
            id, user_id, coupon_id, virtual_id, status, get_time, use_time, cancel_time,
            expire_time, create_time, update_time, request_id, version
        ) VALUES (
                     #{id}, #{userId}, #{couponId}, #{virtualId}, #{status}, #{getTime}, #{useTime}, #{cancelTime},
                     #{expireTime}, #{createTime}, #{updateTime}, #{requestId}, #{version}
                 )
    </insert>

    <insert id="insertOrder" parameterType="com.aliyun.seckill.common.pojo.Order">
        INSERT INTO `order` (
            id, user_id, coupon_id, virtual_id, status, get_time, use_time, cancel_time,
            expire_time, create_time, update_time, request_id, version
        ) VALUES (
                     #{id}, #{userId}, #{couponId}, #{virtualId}, #{status}, #{getTime}, #{useTime}, #{cancelTime},
                     #{expireTime}, #{createTime}, #{updateTime}, #{requestId}, #{version}
                 )
    </insert>

    <select id="selectById" parameterType="string" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE id = #{id}
    </select>

    <select id="selectOrderById" parameterType="string" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE id = #{id}
    </select>

    <update id="updateStatus">
        UPDATE `order`
        SET status = #{status}, update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <update id="updateStatusWithCancelTime">
        UPDATE `order`
        SET status = #{status}, cancel_time = #{cancelTime}, update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <update id="updateOrderStatus">
        UPDATE `order`
        SET status = #{status}, update_time = NOW()
        WHERE id = #{id}
    </update>

    <select id="countByUserAndCoupon" resultType="long">
        SELECT COUNT(*) FROM `order`
        WHERE user_id = #{userId} AND coupon_id = #{couponId}
    </select>

    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT * FROM `order`
        WHERE user_id = #{userId}
        ORDER BY create_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="selectAllByCondition" resultMap="BaseResultMap">
        SELECT * FROM `order`
        <where>
            <if test="startTime != null and startTime != ''">
                AND create_time >= #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND create_time &lt;= #{endTime}
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="selectUserCouponCountById" resultType="com.aliyun.seckill.common.pojo.UserCouponCount">
        SELECT user_id, total_count, seckill_count, normal_count, expired_count
        FROM user_coupon_count
        WHERE user_id = #{userId}
    </select>

    <insert id="insertUserCouponCount" parameterType="com.aliyun.seckill.common.pojo.UserCouponCount">
        INSERT INTO user_coupon_count (user_id, total_count, seckill_count, normal_count, expired_count)
        VALUES (#{userId}, #{totalCount}, #{seckillCount}, #{normalCount}, #{expiredCount})
        ON DUPLICATE KEY UPDATE
                             total_count = #{totalCount},
                             seckill_count = #{seckillCount},
                             normal_count = #{normalCount},
                             expired_count = #{expiredCount}
    </insert>

    <update id="updateUserCouponCount">
        UPDATE user_coupon_count
        SET total_count = #{totalCount},
            seckill_count = #{seckillCount}
        WHERE user_id = #{userId}
    </update>

</mapper>
