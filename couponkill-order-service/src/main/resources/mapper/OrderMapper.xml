<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aliyun.seckill.couponkillorderservice.mapper.OrderMapper">

    <resultMap id="OrderMap" type="com.aliyun.seckill.common.pojo.Order">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="coupon_id" property="couponId"/>
        <result column="virtual_id" property="virtualId"/>
        <result column="status" property="status"/>
        <result column="get_time" property="getTime"/>
        <result column="expire_time" property="expireTime"/>
        <result column="use_time" property="useTime"/>
        <result column="cancel_time" property="cancelTime"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="created_by_java" property="createdByJava"/>
        <result column="created_by_go" property="createdByGo"/>
        <result column="request_id" property="requestId"/>
        <result column="version" property="version"/>
    </resultMap>

    <insert id="insert">
        INSERT INTO `order` (
            id, user_id, coupon_id, virtual_id, status, get_time, expire_time,
            use_time, cancel_time, create_time, update_time, created_by_java,
            created_by_go, request_id, version
        ) VALUES (
            #{id}, #{userId}, #{couponId}, #{virtualId}, #{status}, #{getTime},
            #{expireTime}, #{useTime}, #{cancelTime}, #{createTime}, #{updateTime},
            #{createdByJava}, #{createdByGo}, #{requestId}, #{version}
        )
    </insert>

    <select id="selectById" resultMap="OrderMap">
        SELECT * FROM `order` WHERE id = #{id}
    </select>

    <select id="selectByUserId" resultMap="OrderMap">
        SELECT * FROM `order` 
        WHERE user_id = #{userId} 
        ORDER BY create_time DESC 
        LIMIT 100
    </select>

    <select id="selectByCouponId" resultMap="OrderMap">
        SELECT * FROM `order` 
        WHERE coupon_id = #{couponId} 
        ORDER BY create_time DESC 
        LIMIT 100
    </select>

    <select id="selectByVirtualId" resultMap="OrderMap">
        SELECT * FROM `order` WHERE virtual_id = #{virtualId}
    </select>

    <select id="selectByUserIdAndCouponId" resultMap="OrderMap">
        SELECT * FROM `order` 
        WHERE user_id = #{userId} AND coupon_id = #{couponId} 
        ORDER BY create_time DESC 
        LIMIT 10
    </select>

    <select id="selectByUserIdAndStatus" resultMap="OrderMap">
        SELECT * FROM `order` 
        WHERE user_id = #{userId} AND status = #{status} 
        ORDER BY create_time DESC 
        LIMIT 100
    </select>

    <update id="updateStatus">
        UPDATE `order` 
        SET status = #{status}, update_time = NOW(), version = version + 1
        WHERE id = #{id} AND version = #{version}
    </update>

    <update id="updateUseTime">
        UPDATE `order` 
        SET use_time = #{useTime}, status = 2, update_time = NOW(), version = version + 1
        WHERE id = #{id} AND version = #{version}
    </update>

    <update id="updateCancelTime">
        UPDATE `order` 
        SET cancel_time = #{cancelTime}, status = 4, update_time = NOW(), version = version + 1
        WHERE id = #{id} AND version = #{version}
    </update>

    <select id="selectExpiredOrders" resultMap="OrderMap">
        SELECT * FROM `order` 
        WHERE status = 1 AND expire_time &lt; NOW() 
        ORDER BY expire_time 
        LIMIT #{limit}
    </select>

    <select id="selectByRequestId" resultMap="OrderMap">
        SELECT * FROM `order` WHERE request_id = #{requestId}
    </select>

    <!-- 添加唯一性约束检查查询，用于防止重复秒杀 -->
    <select id="checkDuplicateSeckill" resultType="int">
        SELECT COUNT(*) FROM `order`
        WHERE user_id = #{userId} AND coupon_id = #{couponId} AND status IN (1, 2)
    </select>

</mapper>